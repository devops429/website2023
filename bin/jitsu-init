#!/usr/bin/env ruby
require 'jitsu'

abort "Usage: #{File.basename($0)} <path>" if ARGV.empty?

path = ARGV.shift
packages = ARGV.map { ARGV.shift  }

puts "[in] #{packages}"

def continue?
  arg = gets.downcase.chomp
  (arg == 'y' || arg.length == 0) ? true : false
end

if File.exists?(path)
  puts "[warning] Destination path exists! If you continue the project will be deleted.\n[prompt] DELETE? (Y/n)"
  if continue?
    puts "[out] deleting existing project"
    `rm -rf #{path}`
  else
    abort("[exit] path already exists.")
  end
end

puts 
abort "[exit] path already exists." if File.exists?(path)

puts "[out] creating project directory"
`mkdir -p #{path}/config`

puts "[out] creating config file"
`touch #{path}/config/build.jitsu`

puts "[out] selected package: core"
`echo '+core' >> #{path}/config/build.jitsu`

packages.each do |package|
  if Jitsu::AUTHORIZED_PACKAGES.include?(package)
    puts "[out] selected package: #{package}"
    `echo '+#{package}' >> #{path}/config/build.jitsu`
  else
    puts "[out] ignored unknown package: #{package}"
  end
end
